[project]
name = "meltanolabs-tap-postgres"
dynamic = ["version"]
description = "Singer tap for Postgres, built with the Meltano SDK for Singer Targets."
authors = [{ name = "Meltano Team and Contributors", email = "hello@meltano.com" }]
requires-python = ">=3.9"
readme = "README.md"
license = "MIT"
maintainers = [{ name = "Meltano Team and Contributors", email = "hello@meltano.com" }]
keywords = [
    "Postgres",
    "Singer",
    "ELT",
    "Meltano",
    "Meltano SDK",
]
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = [
    "psycopg2-binary==2.9.10",
    "sqlalchemy==2.0.40",
    "sshtunnel==0.4.0",
    "singer-sdk[faker]~=0.46.0",
]

[project.urls]
Homepage = "https://meltano.com"
Repository = "https://github.com/MeltanoLabs/tap-postgres"
Documentation = "https://github.com/MeltanoLabs/tap-postgres/blob/main/README.md"

[project.scripts]
tap-postgres = "tap_postgres.tap:TapPostgres.cli"

[dependency-groups]
dev = [
    { include-group = "lint" },
    { include-group = "testing" },
    { include-group = "typing" },
]
lint = [
    "ruff~=0.11.0",
]
testing = [
    "hypothesis>=6.122.1",
    "pytest>=8",
    "singer-sdk[testing]~=0.46.0",
]
typing = [
    "mypy>=1.8.0",
    "types-paramiko>=3.3.0.0",
    "types-simplejson>=3.19.0.2",
    "types-sqlalchemy>=1.4.53.38",
    "types-jsonschema>=4.19.0.3",
    "types-psycopg2>=2.9.21.20240118",
]

[tool.hatch.build.targets.sdist]
include = ["tap_postgres"]

[tool.hatch.build.targets.wheel]
include = ["tap_postgres"]

[tool.mypy]
exclude = "tests"
python_version = "3.13"
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
    "sshtunnel",
]

[build-system]
requires = [
  "hatchling==1.27",
  "hatch-vcs==0.4",
]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[tool.ruff.lint]
select = [
  "F",    # Pyflakes
  "W",    # pycodestyle warnings
  "E",    # pycodestyle errors
  "I",    # isort
  "N",    # pep8-naming
  "D",    # pydocstyle
  "UP",   # pyupgrade
  "ICN",  # flake8-import-conventions
  "RET",  # flake8-return
  "SIM",  # flake8-simplify
  "TC",   # flake8-type-checking
  "ERA",  # eradicate
  "PGH",  # pygrep-hooks
  "PL",   # Pylint
  "PERF", # Perflint
  "RUF",  # ruff
]

[tool.ruff.lint.flake8-import-conventions]
banned-from = ["sqlalchemy"]

[tool.ruff.lint.flake8-import-conventions.extend-aliases]
sqlalchemy = "sa"

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
  "D",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
addopts = '--durations=10'
